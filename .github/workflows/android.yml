name: Android CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Create google-services.json
        run: |
          echo '{
            "project_info": {
              "project_number": "${{ secrets.FIREBASE_PROJECT_NUMBER }}",
              "project_id": "${{ secrets.FIREBASE_PROJECT_ID }}",
              "storage_bucket": "${{ secrets.FIREBASE_STORAGE_BUCKET }}"
            },
            "client": [
              {
                "client_info": {
                  "mobilesdk_app_id": "${{ secrets.FIREBASE_MOBILE_SDK_APP_ID }}",
                  "android_client_info": {
                    "package_name": "com.khalil.DRACS"
                  }
                },
                "oauth_client": [],
                "api_key": [
                  {
                    "current_key": "${{ secrets.FIREBASE_API_KEY }}"
                  }
                ],
                "services": {
                  "appinvite_service": {
                    "other_platform_oauth_client": []
                  }
                }
              }
            ],
            "configuration_version": "1"
          }' > app/google-services.json

      - name: Build with Gradle
        run: ./gradlew build

      - name: Build Debug APK
        run: ./gradlew assembleDebug

      - name: Build AndroidTest APK
        run: ./gradlew assembleAndroidTest

      - name: Verify APK files exist
        run: ls -l ./app/build/outputs/apk/androidTest/debug/

      - name: Setup Firebase Test Lab
        run: |
          # Install Firebase CLI
          curl -sL https://firebase.tools | bash
          
          # Authenticate with Firebase
          firebase login:ci --no-localhost
          echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}" > service-account.json
          gcloud auth activate-service-account --key-file=service-account.json
          
          # List available devices with proper filtering
          echo "=== Available Test Devices ==="
          gcloud firebase test android models list \
            --format="table[box](model_id,form_factor,version,supported_abis)" \
            --filter="form_factor=PHONE"
          
          # Run test on confirmed working device
          echo "=== Running Test ==="
          gcloud firebase test android run \
            --app ./app/build/outputs/apk/debug/app-debug.apk \
            --type robo \
            --device model=redfin,version=30,locale=en,orientation=portrait \
            --timeout 5m
